var count,down,echo,function_exists,grab,show_tags,store,str_replace,str_rev,strip_tags,strlen,strpos,trim,up;
echo=function(e){
var _1;
if(!(e===null||e===""||e===void 0)){
return document.write(e);
}else{
_1=(function(){
throw new Error("Specify an argument, first!");
})();
return console.log(_1);
}
};
function_exists=function(fn){
if(!(fn===null||fn===""||fn===void 0)){
try{
if(typeof fn!=="function"){
throw new ReferenceError("'"+fn+"' isn't a function");
return false;
}else{
return true;
}
}
catch(er){
return alert(er.message);
}
}else{
alert("The 'function_exists' function requires one argument, which you haven't specifed!");
throw new TypeError("Function hasn't been supplied arguments.");
}
};
strlen=function(e){
if(!(e===null||e===""||e===void 0||typeof e!=="string")){
return e.length;
}else{
alert(""+e+" is NOT string data!");
throw new TypeError(""+e+" isn't a string");
}
};
strpos=function(n,h){
var _2,_3,_4;
if(!(n===void 0||h===void 0||n===null||h===null||n===""||h==="")){
_4=n;
_3=h;
if(_3.indexOf(_4!==-1)){
return _3.indexOf(_4);
return true;
return console.log("Successfully found the provided needle in the haystack");
}else{
_2=(function(){
throw new Error("Couldn't find '"+_4+"' inside '"+_3+"'. Do remember that this function is case sensitive, so it will try to exactly match '"+_4+"' inside '"+_3+"'.");
})();
console.error(_2);
return false;
}
}else{
throw new Error("Please provide arguments to the 'strpos' function");
}
};
str_replace=function(o,n,s){
var _5,_6,_7;
if(!(o===void 0||n===void 0||s===void 0||o===null||n===null||s===null||o===""||n===""||s==="")){
try{
_6=o;
_5=n;
_7=s;
if(typeof _6==="string"&&typeof _5==="string"&&typeof _7==="string"){
return _7.replace(_6,_5);
}else{
throw new TypeError("Neither '"+_6+"' or '"+_5+"' are string values. BOTH of these arguments must be of string data.");
}
}
catch(err){
return alert(err.message);
}
}else{
throw new Error("The 'str_replace' function expects three arguments.");
}
};
up=function(s){
if(!(s===void 0||s===""||s===null)){
if(typeof s==="string"){
return s.toUpperCase();
}else{
return alert("'"+s+"' isn't a string.");
}
}else{
throw new Error("The 'up' function expects one argument. No arguments have been specified.");
}
};
down=function(s){
if(!(s===void 0||s===""||s===null)){
if(typeof s==="string"){
return s.toLowerCase();
}else{
return alert("'"+s+"' isn't a string.");
}
}else{
throw new Error("The 'down' function expects one argument. No arguments have been specified.");
}
};
store=function(t,m,k,v){
var _8,_9,_a,_b;
if(!(t===void 0||m===void 0||k===void 0||t===null||m===null||k===null||t===""||m===""||k==="")){
_a=t;
_9=m;
_8=k;
_b=v;
if(_a==="session"){
if(_9==="set"){
if(_8!==null&&_b!==null||_8!==""&&_b!==""){
return sessionStorage.setItem(_8,_b);
}else{
throw new Error("A key and its value MUST be specified!");
return alert("A key and its value MUST be specified!");
}
}else{
if(_9==="get"){
if(_8!==null||_8!==""){
return sessionStorage.getItem(_8);
}else{
throw new Error("Key not specified.");
}
}else{
if(_9==="remove"){
if(_8!==null||_8!==""){
console.log("Removing '"+_8+"' from the Session Storage...");
return sessionStorage.removeItem(_8);
}
}
}
}
}else{
if(_a==="local"){
if(_9==="set"){
if(_8!==null&&_b!==null||_8!==""&&_b!==""){
return localStorage.setItem(_8,_b);
}else{
throw new Error("A key and its value MUST be specified!");
return alert("A key and its value MUST be specified!");
}
}else{
if(_9==="get"){
if(_8!==null||_8!==""){
return localStorage.getItem(_8);
}else{
throw new Error("Key not specified.");
}
}else{
if(_9==="remove"){
if(_8!==null||_8!==""){
console.log("Removing '"+_8+"' from the Local Storage...");
return localStorage.removeItem(_8);
}
}
}
}
}
}
}else{
throw new Error("The 'store' function expects at least three arguments, and four arguments if setting a key.");
}
};
str_rev=function(s){
if(!(s===void 0||s===""||s===null)){
if(typeof s==="string"){
return s.split("").reverse().join("");
}else{
return alert("Error: '"+s+"' isn't string data!");
}
}else{
throw new Error("The 'str_rev' function expects one argument.");
}
};
grab=function(e){
var _c,_d,_e;
try{
if(!(e===void 0||e===null||e===""||typeof e==="undefined")){
if(typeof e==="string"){
_c=document.querySelectorAll(e);
if(_c.length===1){
return _c[0];
}else{
if(_c.length>1){
return _c;
}else{
_e=document.getElementsByTagName(e);
_d=document.getElementsByName(e);
if(_e.length===1||_e.length>1&&_d.length===1||_d.length>1){
if(_e.length===1){
return _e[0];
}else{
return _e;
}
}else{
if(_e.length===1||_e.length>1&&_d.length===0){
if(_e.length===1){
return _e[0];
}else{
if(_e.length>1){
return _e;
}else{
if(_d.length===1){
return _d[0];
}else{
if(_d.length>1){
return _d;
}
}
}
}
}else{
throw new Error("Notice to developer: Couldn't find any element in the DOM (Document Object Model) matching '"+e+"'. \n\nError thrown from the 'grab' function.");
}
}
}
}
}else{
throw new TypeError("Please encapsulate the function arguments within speech marks.");
}
}else{
throw new Error("The 'grab' function expects one argument, which hasn't been specified.");
}
}
catch(err){
return alert(err);
}
};
trim=function(e){
var _f;
if(!(typeof e!=="string"||e===void 0||e===""||e===null)){
_f=e;
if(_f.match(/^\s+/)||_f.match(/\s+$/)){
_f=_f.replace(/^\s+/,"");
_f=_f.replace(/\s+$/,"");
return _f;
}else{
return _f;
}
}else{
throw new TypeError("Please provide an argument within speech marks");
}
};
count=function(e){
var _10,_11;
if(!(e===""||e===null||e===void 0)){
if(typeof e==="string"){
_10=e;
_10=trim(e);
_11=_10.split(/\s+/);
if(_11){
return _11.length;
}else{
return console.log("Couldn't count "+_10);
}
}
}
};
strip_tags=function(e){
var _12,_13,_14,_15;
if(!(e===void 0||e===null||e==="")){
_15=e;
if(typeof _15==="string"){
_13=_15.match(/<[A-Za-z0-9='"\s+]+>/g);
_12=_15.match(/<\/[A-Za-z0-9='"\s+]+>/g);
if(_13&&_13){
_15=_15.replace(/<[A-Za-z0-9='"\s+]+>/g,"");
_15=_15.replace(/<\/[A-Za-z0-9='"\s+]+>/g,"");
return trim(_15);
}else{
throw new TypeError("The provided argument doesn't look like it has tags within it.");
}
}else{
if(typeof _15==="object"){
_14=_15.outerHTML;
_14=_14.replace(/\n/g,"");
_13=_14.match(/<[A-Za-z0-9='"\s+]+>/g);
_12=_14.match(/<\/[A-Za-z0-9='"\s+]+>/g);
if(_13&&_12){
_14=_14.replace(/<[A-Za-z0-9='"\s+]+>/g,"");
_14=_14.replace(/<\/[A-Za-z0-9='"\s+]+>/g,"");
return trim(_14);
}else{
throw new TypeError("The provided argument doesn't look like it has tags within it.");
}
}
}
}else{
throw new Error("The 'strip_tags' function expects one argument in the form of a string or object.");
}
};
show_tags=function(e){
var _16,_17,_18,_19;
if(!(e===void 0||typeof e==="undefined"||e===null||e==="")){
_16=e;
try{
if(typeof _16==="string"){
if(_16.match(/</g&&_16.match(/>/g))){
_19=_16.replace(/</g,"&lt;");
_18=_19.replace(/>/g,"&gt;");
return trim(_18);
}else{
throw new ReferenceError("Can't detect any tags inside '"+_16+"'");
}
}else{
if(typeof _16==="object"){
_17=_16.outerHTML;
if(_17.match(/</g&&_17.match(/>/g))){
_19=_17.replace(/</g,"&lt;");
_18=_19.replace(/>/g,"&gt;");
return trim(_18);
}else{
throw new ReferenceError("Can't detect any tags inside '"+_16+"'");
}
}else{
throw new Error("The 'show_tags' function can only modify string and object data.");
}
}
}
catch(err){
return alert(err.message);
}
}else{
throw new Error("The 'show_tags' function expects one parameter being string or object data.");
}
};

